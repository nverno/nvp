#+TITLE: Notes / Todos
#+DATE: <2019-02-25 01:24:28>

* Functions
** General [0/7]
- [ ] interface to install external deps
- [ ] quickhelp-toggle
- [ ] company-local => macro, check for nested backends
- [ ] list package dependencies -- `package--get-deps'
- [ ] more generic compile function?
- [ ] fix list wrapping to account for syntax
- [ ] jumping from shell doesn't account for local variables
- [ ] remove all methods from generic for debugging
** evil
things to look into
- [ ] define command
- [ ] repeat
- [ ] fold-list
- [ ] evil-make
- [ ] evil-shell-command
- [ ] evil-with-view-list
- [ ] evil-ex-sort : sort lines command
- [ ] evil-jump-to-tag
- [ ] evil-lookup-func

** Utils [1/4]
- [ ] reusable region or string utility function
- [ ] read w/ popup help: `register-read-with-preview'
- [ ] utility function to repeat command like kbdmacro-repeat
- [X] function wrappers to call local funs
*** Wrappers [1/4]
- [X] basic cache wrapper
- [ ] memoize wrappers: [[https://github.com/skeeto/emacs-memoize][memoize]]
- [ ] frame cache - see which-func
- [ ] cache w/ filenotify invalidation


** Logging [0/3]
- [ ] only report warnings / errors when compiling
- [ ] add option to treat all warnings as errors to makefile
- [ ] update nvp-log, not very useful. Look into shutup
** REPLs [0/1]
Not sure how this should work.
- [ ] uniform repl-swithcing interface

** Newline DWIM [1/2]
- [X] generic methods
- [ ] method to match delims

** Tests [0/4] 
- [ ] generic at point
- [ ] framework to use? mode-dependent?
- [ ] unit test
- [ ] project tests

** Parsing [2/6]
see which-func
- [X] generic functions in buffer
- [X] current function name
- [ ] cache functions ala which-func
- [ ] includes in buffer
- [ ] global variables in buffer
- [ ] local variables in lexical scope

** Generic abbrevs [3/5]
- [X] Generic read
- [X] create abbrev from region
- [X] determine abbrev table name from abbrev
- [ ] create dynamic table
- [ ] make dynamic abbrevs

** Docs/help-at-point [1/6]
- [X] generic methods
- [ ] company-backend
- [ ] man backend
- [ ] web search backend
- [ ] help-at-point frontend function
- [ ] better fitting of popup to frame

** Completion [2/3]
- [ ] edebug -- possibly favor local variable completion?
*** TODO company-bash [0/2]
- [ ] don't leave includes open
- [ ] create xrefs from imenu markers

*** TODO snippet completion [0/3]
- [ ] basic head completion => merge yas-capf
- [ ] elisp completion where appropriate
- [ ] elisp-xref backend

* Modes
** elisp
- [X] move to subdir of nvp
- [ ] align rules are shitty - dots in double quotes get moved.
- [ ] macroify-bindings update => elisp
- [ ] package
- [ ] fix hippie - adds extra ')' when no match
- [X] jumping to abbrev with region doesn't account for prefixes
*** HAP [0/1]
- [ ] use company-backend
*** Parsing [1/3]
Use ~load-history~
- [X] buffer functions
- [ ] buffer includes
- [ ] buffer variables
*** Dynamic abbrevs [0/2]
- [ ] optionally abbrev library, buffer, or file
- [ ] another abbrev table for variables?
*** Jump to source functions [0/4]
- [ ] xref
- [ ] company-backend
- [ ] etags
- [ ] ggtags

** C/C++
- [ ] fixup awk script to parse system includes
- [ ] use EDE?
- [ ] how to gather all includes needed for project?
- [ ] remove all left-over install stuff
- [X] update includes install
- [ ] package
- [ ] subdir of nvp

*** HAP [0/2]
- [ ] company-backend (irony)
- [ ] semantic-backend
*** Parsing [0/4]
- [ ] includes
- [ ] local functions (statics)
- [ ] exported functions
- [ ] globals?
*** Newline DWIM [0/3]
- [ ] default in code method
- [ ] in normal comments
- [ ] in doxygen comments
*** Dynamic abbrevs [0/1]
- [ ] local functions
*** Jump to source functions [0/2]
- [ ] semantic-backend
- [ ] ggtags


** Makefile                                           :makefile:
- [ ] change cleanup to use align rules + better indentation
- [ ] add download source to install
*** macrostep [0/3]
- [ ] fixup awk script to gather local variables for macrostep
- [ ] update macrostep with additional variables + defaults
- [ ] optionally parse makefile commands?
*** Newline DWIM [1/1]
- [X] defaults
*** Parsing [0/3]
- [ ] includes
- [ ] targets
- [ ] dependencies
*** HAP [0/1]
- [ ] company-backends
*** Jump to source functions [0/2]
- [ ] company-backends
- [ ] xref / tags

** M4/Autotools                                             :m4:
- [ ] merge completion/font-lock with autoconf?
- [ ] update hook

** Awk                                                     :awk:
- [ ] function to open src buffer from sh script
- [ ] function to choose from useful oneliners
*** Completion [0/2]
[[https://www.gnu.org/software/gawk/manual/gawk.html#Getting-Started][manual]] : Builtin-in Variables, String functions, Arithmetic Ops, Output
Separators, 
- [ ] variables / function
- [ ] builtin variables / functions
** sh                                                       :sh:
- [X] prefix hippie-shell-expand functions
- [ ] parse sh function documentation
*** Completion [0/2]
- [ ] capf for lexical scoped variables
- [ ] merge capf bash-completion/variable-completion, maybe
  `completion-merge-tables` from minibuffer
*** Snippets [0/1]
- [ ] split sh usage arguments in snippets
*** HAP [0/2]
- [ ] company-backend
- [ ] parse sh function documentation
*** Jump to source functions [0/1]
- [ ] xref for company-bash sources
*** Tests
- [ ] method to jump to unit test at point
** Shell                                                 :shell:
- [ ] wrapping with quotes is broken
- [ ] account for dir-locals when jumping from shell
*** Dynamic abbrevs
** Java                                                   :java:
- [ ] new root package directory w/o creating new directory
*** javadoc-mode
- [ ] formatting for lists
- [ ] possible to determine table starts?
- [ ] better faces
- [ ] jump b/w sections, eg. Man-goto-section
*** HAP [0/2]
- [ ] company-backend
- [ ] web-backend?? javadoc-lookup
*** Tests / jump to source [2/2]
- [X] irony
- [X] irony runs tests


* Mode struct
- [X] struct or class?
- [X] package deps
- [ ] support recipe fetcher
- [ ] external install targets
- [ ] define mode-local variables?

* Automation [2/7]
- [ ] ggtags install
- [ ] hooks to compile/autoload updated packages
- [ ] better logging - only want to see warnings/errors during build
- [ ] update makefiles - remove extra stuff
- [ ] update build-scripts for init / site-lisp - refactor
- [X] gawk installs
- [X] asm install

* Mode settings [5/11]
- [ ] ggtags
- [ ] ctags
  https://github.com/skeeto/.emacs.d/tree/master/lisp
- [ ] ag settings
- [ ] pdfgrep
- [ ] EDE
- [ ] m4
- [X] etags
- [X] edebug
- [X] wgrep
- [X] grep
- [X] limit greps search directories

* Library fixes [3/9]
- [ ] fix nvp-install
- [ ] better package installs
  https://raw.githubusercontent.com/skeeto/.emacs.d/master/lisp/gpkg.el
- [ ] nvp-doc - company backend, man backend, fallback to websearch? zeal?
- [ ] nvp-abbrev-dynamic - should be ready for elisp / C
- [ ] nvp-disassemble - waiting on generic docs
- [ ] only call setup functions on first load
- [X] nvp-minibuffer: eval / edebug hooks, hippie expand history
- [X] separate setup from nvp
- [X] remove nvp-conf / merge with config-tools

* Merge/remove old packages [1/11]
- [ ] bmk-to-bmk => nvp-bookmark
- [ ] esh-help => nvp-eshell
- [ ] project-templates => cookiecutter?
- [ ] project-ido => cookiecutter?
- [ ] cheatsheet-lookup => nvp-help
- [ ] yas-capf => nvp-snippet
- [ ] save-utils => nvp-utils
- [ ] log-utils => nvp-log
- [ ] help-utils => nvp-help
- [ ] tag-utils => nvp-tags
- [X] config-tools => nvp-conf
** subdirs [1/5]
- [ ] md-tools => subdir 
- [X] elisp-utils => subdir
- [ ] yaml-tools => subdir 
- [ ] shell-tools => subdir
- [ ] c-tools => subdir

* Tests / Profile [2/4]
- [ ] update profiling script
- [ ] update CI
- [X] choose testing framework
- [X] add back unit tests

[[https://github.com/emacsmirror/paredit/blob/master/test.el][paredit tests]]

* Elisp Packages [0/4]
** Cookiecutter
wrapper for cookiecutter packages
** Cargo
update / remove
** macrostep-sh
** Awk-it
incorporate?

* cookies [0/3]
- [ ] el
- [ ] pydata
- [ ] CI

