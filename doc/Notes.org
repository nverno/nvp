#+TITLE: Notes / Todos

* Topics
- optimizing startup time: has increased to nearly 2 sec. Better to have
  multiple autoload files or combined? Use package-quickstart? Monolithic
  libraries or keep current organization?
- optimizing mode-local variables
- profiling: current script won't work on compiled init
- git-hooks: reconfigure updated git packages
- autotools management: for external deps? probably overkill
- org tags
- optimize org loadding time: parts can be separated
- texi/info: formatting, tools for parsing/navigating tags
- convert docs to html
- analyzing defgenerics perfomance
- when to prefer defsubst over macro/defun - when is a function too big
- emacs source tagging
- determing include path of project, eg. emacs source
- tracing: following all calls, not just main traced function
- doc programs: doc-base/install-docs for browsing debian docs

* Packages to look into
- Jumps: ggtags / smart-jump / dumb-jump
- Search: counsel+ivy has interfaces to info/ag / ripgrep is fast, but no
  wgrep?? Helm also has a nice info-lookup interface.
- Toggle&Repeat: evil, smartrep - see below
- Porcelains/Buffers: transient
- Packages: straight, package-build, package-recipe-mode
- Lex/Parsing: tablist-filter using wisent for simple grammar
** semantic stuff
This doesn't seem to be too actively maintained
- srecode
- ede
- semantic-sticky-func minor mode for parse generics


* Bin [0/6]
- [ ] [[file:~/bin/include/func-utils.sh::##][funcutils]] - debugging & adding function hooks looks useful
- [ ] adapt help2man to parse switches + docs from man / --help output
- [ ] get usage from script args
- [ ] parse sh function docs
- [ ] parse makefile targets
- [ ] better depend extraction that handles cases with filepath given

* Hooks [0/1]
- [ ] post-update hook to rebuild libs whose deps changed

* Macros [12/14]
- [ ] remove `nvp-install-on-demand` when a better options is found
- [ ] with-struct-slots
- [X] aif
- [X] awhile
- [X] acond
- [X] aand
- [X] separate bindings macros
- [X] unify thing-at-point / region macros
- [X] point ala c-point
- [X] scan-lists
- [X] use simplified version of c-point macro, allowing for different types of
      escaped newlines and not using `c-syntactic-ws` functions
- [X] nvp-file - like nvp-point for common file/directory names
- [X] nvp-ppss - wrap all the nvp-in-... syntax tests
- [X] it would be nice to separate out macros just necessary for setup/init

* Functions

** Tags [0/5]
- [ ] automate ggtags install
- [ ] setup ggtags
- [ ] reconfigure universal-ctags
- [ ] ctags update - https://github.com/skeeto/.emacs.d/tree/master/lisp
- [ ] remove / incorporate tag-utils

** Check / cleanup buffer [2/4]
- [ ] wrapper function: if multiple available options should prompt somehow
- [ ] determine available backends by mode
- [X] display long lines
- [X] display / toggle trailing whitespace cleanup

** Search [3/5]
- [ ] pdfgrep
- [ ] configure ripgrep?
- [X] configure wgrep-ag with different grouping regex
- [X] add ag grouped imenu support
- [X] configure ag to work with xterm-color filter

** Disassemble [0/2]
- [ ] wrapper function
- [ ] modes: elisp (disassemble), c+others (disaster), java, clojure, etc.

** Editing [1/4]
- [ ] fix list wrapping to account for syntax
- [ ] [[https://github.com/abo-abo/oremacs/blob/4eec097d5f6565131121a86479a7aee69e757e90/auto.el#L616][fix column align to ignore trailing comments]]
- [X] sorting by alist handle more than just lists of cons cells
- [ ] indent thing at point

** Cycling [1/6]
- [X] [[file:~/.emacs.d/site-lisp/nvp/modes/perl/nvp-perl.el::;;%20-%20Abstract%20cycling%20chars][generic cycle interface]]
- [ ] how to mark cycling region -- overlays?
- [ ] generalize out of nvp-perl
- [ ] hook to start cycling after abbrev expansion
- [ ] cycling / moving by indentation - pkg: indent-tools
- [ ] iedit cycle restrictions

** Dev [0/4]
- [ ] remove all methods from generic for debugging
- [ ] convert cl-defstruct to vector - formatting for output
- [ ] describe different types of variables: hash, struct, class, default
- [ ] pretty printing alists

** Read/Display [0/3]
- [ ] read w/ popup help: `register-read-with-preview'
- [ ] make use of nvp-view-list-mode -- pkgs: evil-view-list, tablist-filter
- [ ] separate view/results macros

** Repeat / Toggle [1/6]
- [ ] utility function to repeat command like kbdmacro-repeat
- [ ] smartrep for toggled commands
- [ ] define macro for toggle commands
- [ ] reuse same keymap? like company-active-map, or expand-regions ???
- [ ] [[https://github.com/abo-abo/oremacs/blob/4eec097d5f6565131121a86479a7aee69e757e90/auto.el#L863][toggle word to upper]]
- [X] how to remove font-lock keywords added with mode-name?

** Comint / Proc / Ext / Inf [6/9]
- [ ] use in nvp-inf
- [ ] investigate ess-get-next-available-process
- [ ] fixup / remove nvp-ext script runners
- [X] use in nvp-ext to find shell procs
- [X] use in nvp-shell to find shell procs
- [X] merge hippie history expansion with comint-setup-history
- [X] move shell functions from ext to nvp-shell
- [X] use proc functions to find shells
- [X] separate sentinels from comint

** Install [1/4]
- [ ] interface to install external deps
- [ ] mode install targets
- [ ] interface to install GNU source packages
- [X] nvp-ext script functions / sudo are messed up

** Compile [0/4]
- [ ] better generic compile interface: indirect functions, prompt for multiple
  options 
- [ ] completing read for compiler switches - GNU help2man (perl)
- [ ] completing read for makefile targets
- [ ] nvp-compile-help: list compiler info / switches

** Package [0/4]
[[file:~/.emacs.d/elpa/package-build-20190314.440/package-recipe-mode.el][package-recipe-mode]]
- [ ] update package cache
- [ ] display package cache
- [ ] list package dependencies -- `package--get-deps'
- [ ] hooks to compile/autoload updated packages

** evil [1/9]
- [ ] define command
- [ ] repeat
- [ ] fold-list
- [ ] evil-make
- [ ] evil-shell-command
- [ ] evil-ex-sort : sort lines command
- [ ] evil-jump-to-tag
- [ ] evil-lookup-func
- [X] evil-with-view-list

** Jumps [0/4]
pkgs: smart-jump, dumb-jump, evil-jump-to-tag
- [ ] generalized interface
- [ ] register methods for mode - do this in mode struct?
- [ ] allow multiple registered backends for each mode, like smart-jump
- [ ] fallback to grep/ag/dumb-jump or something

** Cache [7/11]
pkgs: memoize, stash
- [ ] memoize wrappers: [[https://github.com/skeeto/emacs-memoize][memoize]]
- [ ] frame cache - see which-func
- [ ] cache w/ filenotify invalidation
- [ ] cache w/ timeout
- [X] generalized cache
- [X] ring cache backend
- [X] hash cache backend
- [X] setf methods for generics, how?
- [X] function wrappers to call local funs
- [X] basic cache wrapper
- [X] cache run once

** Logging [0/3]
pkgs: [[https://github.com/aki2o/log4e][log4e: might be worth checking out]], shut-up
funcs: with-temp-message
- [ ] silence everything but warnings/errors when building
- [ ] add option to treat all warnings as errors to makefile
- [ ] update nvp-log, not very useful - probably just remove

** REPLs [4/7]
- [ ] call indirect functions to modify regions as necessary
- [ ] generic send dwim - last defun / sexp
- [ ] extendable REPL props: eg. staus, cached completions, etc.
- [X] generic send region
- [X] generic send line
- [X] generic send buffer
- [X] uniform repl-swithcing interface

** Newline DWIM [2/4]
https://github.com/ainame/smart-newline.el/blob/master/smart-newline.el
- [ ] method to do comment continuations
- [ ] optional openers/closers
- [X] generic methods
- [X] method to match delims

** Tests [0/4] 
- [ ] generic at point
- [ ] framework to use? mode-dependent?
- [ ] unit test
- [ ] project tests
[[https://github.com/emacsmirror/paredit/blob/master/test.el][paredit tests]]

** Parsing [4/7]
see which-func
- [ ] cache functions ala which-func
- [ ] global variables in buffer
- [ ] local variables in lexical scope
- [X] generic functions in buffer
- [X] current function name
- [X] current library
- [X] includes in buffer

** Generic abbrevs [3/6]
- [ ] create dynamic table
- [ ] make dynamic abbrevs
- [ ] font-lock abbrev-table-mode
- [X] Generic read
- [X] create abbrev from region
- [X] determine abbrev table name from abbrev

** Help [2/15]
- [ ] hap: company
- [ ] hap: temporary map to use when toggled
- [ ] hap: extensible hook to find help
- [ ] hap: source code / tags
- [ ] hap: info files
- [ ] hap: semantic
- [ ] hap: man
- [ ] formatting for toggled tooltip
- [ ] web search / GNU docs - pkgs: google-this
- [ ] [[file:~/.emacs.d/site-lisp/nvp/modes/makefile/nvp-makefile.el][async url topic collection]], [[file:~/.emacs.d/elpa/ess-20190314.1538/ess-julia.el::(defun%20ess-julia--retrive-topics%20(url)][ess does it sync]]
- [X] zeal
- [X] toggle when company is active

Merge loose help packages
- [ ] cheatsheet-lookup
- [ ] help-utils
- [ ] hyperglot

** Completion [0/2]
- [ ] edebug -- possibly favor local variable completion?
*** TODO company-bash [0/2]
- [ ] don't leave includes open
- [ ] create xrefs from imenu markers
*** TODO company-info [0/3]
- [ ] company-backend using info-lookup-completion-at-point
- [ ] extract info locations
- [ ] extract summary text for completion symbols

** Project [0/4]
- [ ] build project
- [ ] navigate between source + tests
- [ ] incorporate project-templates / maybe convert to cookiecutter
- [ ] better way to determine project roots, account for nested roots

** Profile [1/2]
- [ ] profiling script no longer works with compiled init
- [X] compare runtimes b/w code chunks

** Generic template expansion [0/2]
- [ ] default syntax
- [ ] function to expand template - like grep-compute-defaults

* Modes
** [#A] elisp [4/10]
- [ ] align rules are shitty - dots in double quotes get moved.
- [ ] hap: convert to use generic interface
- [ ] toggled tip: merge with general interface
- [ ] parse: buffer variables -- ~load-history~?
- [ ] abbrev: optionally abbrev library, buffer, or file
- [ ] abbrev: determine variable / func table?
- [X] abbrev: fix jumping to proper table based on prefix
- [X] parse: buffer functions
- [X] parse: buffer provides
- [X] parse: buffer includes

** [#A] C/C++ [4/23]
- [X] [[https://github.com/abo-abo/oremacs/blob/4eec097d5f6565131121a86479a7aee69e757e90/auto.el#L79][forward sexp]]
- [ ] font-lock: toggle doxygen
- [X] font-lock: toggle additional rules
- [ ] align rules for doxygen ?
- [ ] how to gather all includes needed for project?
- [ ] fixup script to generate system includes
- [ ] cleanup includes/irony install
- [ ] project: full refactor - EDE, srecode templates?
- [ ] hap: semantic, man, info
- [ ] help: online docs - index for lookup?
- [X] help: man 2/3 depending on function
- [ ] abbrevs: from local functions
- [ ] abbrevs: from includes via semantic ?
- [ ] indirect compile command
- [ ] indirect disassembly via disaster
- [ ] need to be able to choose type of compile from options list
- [ ] newline: use generic
- [ ] newline: comment continuation
semantic tags have parse info
- [ ] parse: includes
- [ ] parse: buffer local functions
- [ ] parse: lexical variables
- [X] parse: current function
- [ ] REPL: fixup gdb REPL interface

** [#A] Makefile [0/8]
*** TODO Align/Indent [0/2]
- [ ] fix align rule for trailing \\
- [ ] add indentation b/w declarations
*** TODO General functions [0/5]
- [ ] [[file:~/.emacs.d/site-lisp/nvp/modes/makefile/nvp-makefile.el::(defun%20nvp-makefile-beginning-of-defun-function%20(&optional%20arg)][fix makefile beg/end of defuns]]
- [ ] mark rules
- [ ] [[file:/usr/local/share/emacs/27.0.50/lisp/cedet/semantic/bovine/make.el.gz::(defun%20semantic-default-make-setup%20()][semantic add anything to makefiles?]]
- [ ] fold declarations
- [ ] fold targets
*** TODO REPL [1/2]
- [X] use default shell
- [ ] add ability to switch to makefile-browser?? It's pretty crappy, but could
  be useful to run specific targets from
*** TODO Download [0/1]
- [ ] add download source to install

*** TODO Completion [0/3]
- [ ] use info-lookup-completion-at-point
- [ ] dynamic variables
- [ ] environment variables
*** TODO macrostep [0/4]
- [ ] fixup awk script to gather local variables for macrostep
- [ ] update macrostep with additional variables + defaults
- [ ] expand environment variables
- [ ] optionally parse makefile commands?

*** TODO Parsing [0/3]
semantic support? seems fucked
- [ ] includes
- [ ] targets
- [ ] dependencies

*** TODO Jumps [0/1]
- [ ] jump to source code for builtin functions

** [#B] Autotools [0/3]
- [ ] enable semantic support??
- [ ] completion with info-lookup

*** TODO m4 [3/7]
- [ ] m4 still missing lots of font-locking
- [ ] gather locally available macros
- [ ] string font-lock? sh font-lock? msgs with string?
- [ ] HAP - from info-lookup
- [X] merge completion/font-lock with autoconf?
- [X] add imenu support
- [X] update hook

*** TODO autoconf [0/4]
- [ ] parse generics
- [ ] string/sh font-lock?
- [ ] fixup HAP - how good is info-lookup work for macros?
- [ ] jump to source?

*** TODO automake [0/2]
- [ ] hook
- [ ] skeleton - srecode?

** [#A] Awk/sed [1/4]
*** refs
  + man.el uses to parse output
  + emacs source hooks / build-aux

*** TODO General [1/4]
- [ ] function to open src buffer from sh script
- [ ] function to choose from useful oneliners
- [ ] use awk-it??
- [X] additional font-lock: indirect calls, fields, keywords

*** DONE Generics [2/2]
- [X] should be able to use norm beg/end/mark function from C
- [X] function at point, other parse probably not important

*** TODO Completion [0/2]
[[https://www.gnu.org/software/gawk/manual/gawk.html#Getting-Started][manual]] : Builtin-in Variables, String functions, Arithmetic Ops, Output
Separators, 
- [ ] parse typescript for builtin sigs/docs/names
- [ ] ~FUNCTAB~, ~PROCINFO["identifiers"]~ provide dynamic completion info

*** TODO Help [0/2]
- [ ] sed lookup help
- [ ] awk lookup help in info node

** [#B] Perl [1/11]
- [ ] help: perldoc to popup
- [ ] repl: comint-input-filter-functions to join lines
- [ ] repl: get completions from Reply?
- [ ] repl: sending buffer/region indirect function to remove junk
- [X] parse: current function
- [ ] parse: buffer functions
- [ ] parse: current module
- [ ] parse: includes
- [ ] parse: variables
- [ ] test: simple test setup
- [ ] test: use script to associate source with test dir?
** [#A] sh [3/13]
- [ ] use shell-cmd at point to do abbrev expansions / hippie exp
- [ ] [[file:~/.emacs.d/site-lisp/nvp/modes/shell/sh-eldoc.el][namespace sh-eldoc and add support for shell]]
- [ ] parse sh function documentation
- [ ] quote wrapping moves '$' sometimes -- see smartparens-ess
- [X] prefix hippie-shell-expand functions
- [X] fix comanpy-active-map
- [ ] comp: capf for lexical scoped variables
- [ ] comp: merge capf bash-completion/variable-completion, maybe
      ~completion-merge-tables~ from minibuffer
- [X] split sh usage arguments in snippets
- [ ] main fn snippet for parsing args - generate usage at same time
- [ ] xref for company-bash sources
- [ ] jump to bat test
- [ ] newline: doc comment

** [#A] Python [0/2]
- [ ] convert newline
- [ ] newline in string => parameters

** [#A] Julia [0/2]
- [ ] convert newline
- [ ] update help with new functions

** [#A] R [0/7]
- [ ] reusable region or string utility function - replace ~r-str-...~ macros
- [ ] convert newline
- [ ] newline in roxygen / comments
- [ ] parse generics
- [ ] update HAP
- [ ] tags
- [ ] xrefs

** [#B] Go [0/1]
- [ ] merge
** [#B] Shell [0/2]
- [ ] expand git abbrevs
- [ ] fix dynamic abbrevs

** [#B] Java [0/2]
- [ ] new root package directory w/o creating new directory
- [ ] fix newline
- [X] parse-current-function
*** TODO javadoc-mode [0/4]
- [ ] formatting for lists
- [ ] possible to determine table starts?
- [ ] better faces
- [ ] jump b/w sections, eg. Man-goto-section
*** TODO HAP [0/1]
- [ ] web-backend?? javadoc-lookup

** [#B] Haskell [5/6]
- [ ] stack bash completion?
- [X] merge
- [X] use cycle for arrows
- [X] remove install stuff
- [X] update install scripts
- [X] fix asdf install

** [#D] PHP [1/1]
- [X] merge
** [#C] D [0/1]
- [ ] merge
** [#C] Opt [0/1]
- [ ] merge
** [#D] Coffee [0/1]
- [ ] merge
** [#D] Powershell [0/1]
- [ ] merge
** [#C] Ocaml [0/1]
- [ ] fix install scripts

** [#D] Elixir [0/1]
- [ ] merge

** [#D] Erlang [0/1]
- [ ] merge

** [#C] SML [2/9]
- [ ] fix install scripts
- [X] remove inf hippie function
- [ ] use generic REPL interface
- [ ] update newline dwim
- [X] remove old elisp installs
- [ ] remove/update tag-utils stuff
- [ ] indirect compile function
- [ ] generic beginning/end defun
- [ ] generic mark-defun

** [#B] Octave/Matlab [0/2]
- [ ] merge
- [ ] use REPL interface

** [#C] Neo4j / Database [0/1]
- [ ] merge

** [#D] Csharp [1/2]
- [X] merge
- [ ] update install

* Mode struct [2/5]
https://raw.githubusercontent.com/skeeto/.emacs.d/master/lisp/gpkg.el
- [ ] support recipe fetcher
- [ ] external install targets
- [ ] define mode-local variables?
- [X] struct or class?
- [X] package deps


* Mode settings [5/8]
- [ ] semantic add bindings to toggle disabled submodes
- [ ] update semantic bindings related to tags / jumps
- [ ] SRrecode -- worth using as well as snippets?
- [X] cedet base settings separate from any specific mode stuff
- [X] separate c specific settings from general semantic/cedet
- [X] move c includes install to c config
- [X] c install/update includes async (already does?)
- [X] EDE - meh?

* Elisp Packages [0/2]
** TODO Cookiecutter [2/3]
wrapper for cookiecutter packages
- [X] install cookiecutter
- [X] start package
- [ ] design interface

** TODO macrostep-sh
- [ ] bounds of things at point
- [ ] parse variables in lexical context
- [ ] include environment variables
- [ ] handle various string operations
- [ ] handle default values

* cookies [1/3]
- [X] el
- [ ] pydata
- [ ] CI

