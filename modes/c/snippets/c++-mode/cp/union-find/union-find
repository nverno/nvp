# -*- mode: snippet -*-
# name: union find
# key: d_uf
# --
static const int maxN = ${1:1e5+1};
int uf[maxN], sz[maxN];

int find(int x) {
    return x == uf[x] ? x : uf[x] = find(uf[x]);
}

void merge(int x, int y) {
    int xx = find(x), yy = find(y);
    if (xx != yy) {
        if (sz[xx] > sz[yy])
            swap(xx, yy);
        uf[xx] = yy;
        sz[yy] += sz[xx];
    }
}

void init() {
    std::iota(std::begin(uf), std::end(uf), 0);
    std::fill(std::begin(sz), std::end(sz), 1);
}
