# -*- mode: snippet -*-
# name: fenwick/binary indexed tree
# key: d_bit
# --
class Bit
  # @param {Integer} size
  def initialize size
    @n = size + 1
    @bit = Array.new(@n).fill(0)
  end

  # @param {Integer} idx
  # @param {Integer} val
  def update(idx, val)
    i = idx + 1
    while i < @n
      @bit[i] += val
      i += i & -i
    end
  end

  # @param {Integer} idx
  # @return {Integer}
  def query(idx)
    res, i = 0, idx + 1
    while i > 0
      res += @bit[i]
      i -= i & -i
    end
    res
  end

  # @param {Integer} left
  # @param {Integer} right
  # @return {Integer}
  def rquery(left, right)
    self.query(right) - self.query(left - 1)
  end
end
