# -*- mode: snippet -*-
# name: sieve of eratosthenes
# key: f_sieve
# --
/// primes up to (and including) n
pub fn sieve(n: u32) -> Vec<bool> {
    let mut is_prime = vec![true; (n+1) as usize];
    is_prime[0] = false;
    is_prime[1] = false;
    let mut i = 2;
    while i*i <= n {
        if is_prime[i as usize] {
            for j in ((i*i)..(n+1)).step_by(i as usize) {
                is_prime[j as usize] = false;
            }
        }
        i += 1;
    }
    is_prime
}
