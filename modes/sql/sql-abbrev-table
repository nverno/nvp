;; -*- coding: utf-8; no-byte-compile: t; -*-

(define-abbrev-table 'sql-mode-abbrev-table
  '(("gb" "GROUP BY" nil :system t)
    ("ob" "ORDER BY" nil :system t)
    ("ins" "insert" nil :system t)
    ("upd" "update" nil :system t)
    ("del" "delete" nil :system t)
    ("sel" "select" nil :system t)
    ("pro" "procedure" nil :system t)
    ("fun" "function" nil :system t)
    ("cre" "create" nil :system t))
  "Abbrev table used in `sql-mode' and `sql-interactive-mode'."
  :parents (list fundamental-mode-abbrev-table)
  :enable-function 'sql-in-code-context-p)

(define-abbrev-table 'sql-mysql-mode-abbrev-table
  '()
  "MySql abbrevs."
  :enable-function (lambda () (eq sql-product 'mysql))
  :parents (list sql-mode-abbrev-table))

(define-abbrev-table 'sql-sqlite-mode-abbrev-table
  '()
  "Sqlite abbrevs."
  :enable-function (lambda () (eq sql-product 'sqlite))
  :parents (list sql-mode-abbrev-table))

(define-abbrev-table 'sql-interactive-sqlite-abbrev-table
  '(("cols" "PRAGMA table_info" nil :system t))
  "Sqlite shell abbrevs."
  :enable-function (lambda () (eq sql-product 'sqlite)))

(define-abbrev-table 'sql-interactive-mode-abbrev-table
  '(("nrow" "SELECT count(*) FROM" nil :system t)
    ("head" ["SELECT * FROM  LIMIT 10;" 10 nil nil] expand-abbrev-hook :system t))
  "Sql-Interactive-Mode Abbrevs."
  :parents (list sql-mode-abbrev-table
                 sql-interactive-sqlite-abbrev-table))
