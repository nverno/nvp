;; -*- coding: utf-8; mode: emacs-lisp; no-byte-compile: t; -*-

(define-abbrev-table 'unicode-abbrev-table
  '(;; general
    ("\\degree" "°" nil :system t)
    ("\\heartsuit" "♡" nil :system t)
    ("\\eighthnote" "♪" nil :system t)
    ("\\twonotes" "♫" nil :system t)
    ("\\flat" "♭" nil :system t)
    ("\\natural" "♮" nil :system t)
    ("\\sharp" "♯" nil :system t)
    ("\\checkmark" "✓" nil :system t)

    ;; math
    ("\\Pi" "Π" nil :system t)
    ("\\pi" "π" nil :system t)
    ("\\forall" "∀" nil :system t)
    ("\\exists" "∃" nil :system t)
    ("\\nexists" "∄" nil :system t)
    ("\\in" "∈" nil :system t)
    ("\\notin" "∉" nil :system t)
    ("\\infty" "∞" nil :system t)
    ("\\O" "Ø" nil :system t)
    ("\\ne" "≠" nil :system t)

    ;; ops
    ("\\pm" "±" nil :system t)
    ("\\times" "×" nil :system t)
    ("\\div" "÷" nil :system t)
    
    ;; logical
    ("\\neg" "¬" nil :system t)
    ("\\sim" "∼" nil :system t)
    ("\\approx" "≈" nil :system t)
    ("\\ne" "≠" nil :system t)
    ("\\le" "≤" nil :system t)
    ("\\ge" "≥" nil :system t)

    ;; subscript / superscript
    ("\\^1" "¹" nil :system t)
    ("\\^2" "²" nil :system t)
    ("\\^3" "³" nil :system t)
    ("\\^0" "⁰" nil :system t)
    ("\\^i" "ⁱ" nil :system t)
    ("\\^4" "⁴" nil :system t)
    ("\\^5" "⁵" nil :system t)
    ("\\^6" "⁶" nil :system t)
    ("\\^7" "⁷" nil :system t)
    ("\\^8" "⁸" nil :system t)
    ("\\^9" "⁹" nil :system t)
    ("\\^n" "ⁿ" nil :system t)
    ("\\_0" "₀" nil :system t)
    ("\\_1" "₁" nil :system t)
    ("\\_2" "₂" nil :system t)
    ("\\_3" "₃" nil :system t)
    ("\\_4" "₄" nil :system t)
    ("\\_5" "₅" nil :system t)
    ("\\_6" "₆" nil :system t)
    ("\\_7" "₇" nil :system t)
    ("\\_8" "₈" nil :system t)
    ("\\_9" "₉" nil :system t)

    ;; greek lower
    ("\\alpha" "α" nil :system t)
    ("\\beta" "β" nil :system t)
    ("\\gamma" "γ" nil :system t)
    ("\\delta" "δ" nil :system t)
    ("\\upepsilon" "ε" nil :system t)
    ("\\zeta" "ζ" nil :system t)
    ("\\eta" "η" nil :system t)
    ("\\theta" "θ" nil :system t)
    ("\\iota" "ι" nil :system t)
    ("\\kappa" "κ" nil :system t)
    ("\\lambda" "λ" nil :system t)
    ("\\mu" "μ" nil :system t)
    ("\\nu" "ν" nil :system t)
    ("\\rho" "ρ" nil :system t)
    ("\\sigma" "σ" nil :system t)
    ("\\tau" "τ" nil :system t)
    ("\\upsilon" "υ" nil :system t)
    ("\\varphi" "φ" nil :system t)
    ("\\chi" "χ" nil :system t)
    ("\\psi" "ψ" nil :system t)
    ("\\omega" "ω" nil :system t)
    ("\\phi" "ϕ" nil :system t)
    ("\\epsilon" "ϵ" nil :system t)

    ;; Arrows
    ("\\leftarrow" "←" nil :system t)
    ("\\uparrow" "↑" nil :system t)
    ("\\rightarrow" "→" nil :system t)
    ("\\downarrow" "↓" nil :system t)
    ("\\leftrightarrow" "↔" nil :system t)
    ("\\updownarrow" "↕" nil :system t)
    ("\\Leftarrow" "⇐" nil :system t)
    ("\\Uparrow" "⇑" nil :system t)
    ("\\Rightarrow" "⇒" nil :system t)
    ("\\Downarrow" "⇓" nil :system t)
    ("\\Leftrightarrow" "⇔" nil :system t)
    ("\\Updownarrow" "⇕" nil :system t)
    )
  "Unicode Abbrevs."
  :regexp "\\(\\\\[\\A-Za-z0-9^]+\\)")
